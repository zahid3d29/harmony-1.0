
{%- style -%}

  @keyframes fadeEffect {
    from {opacity: 0;}
    to {opacity: 1;}
  }
  #product__overlay{
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    overflow: hidden;
    width: 100%;
    height: 0;
    transition: .5s ease;
    z-index: 21;
  }
  #product__grid-wrapper:hover #product__overlay{
    height: 100%;
  }

  /* paginate style  */
  .paginate_circle { 
    width: 50px; 
    line-height: 50px; 
    border-radius: 50%; 
    display: flex;
    justify-content: center;
    align-items: center;
  } 

  /* schema settings color  */
  {% for scheme in settings.color_schemes %}
    
    /* Button color  */
    /* .overlay__btn{
      background: rgb({{ scheme.settings.button.red }},{{ scheme.settings.button.green }},{{ scheme.settings.button.blue }});
      color: rgb({{ scheme.settings.button_label.red }},{{ scheme.settings.button_label.green }},{{ scheme.settings.button_label.blue }});
    } */

    .product__grid-card {
      padding: {{ settings.product_card_padding }}px {{ settings.product_card_padding }}px;
      border-radius: {{ settings.product_card_corner_radius }}px;
      border-width: {{ settings.product_card_border_thickness }}px;
      border-color: {{ settings.product_card_border_color }};
      box-shadow: {{ settings.product_card_shadow_horizontal_offset }}px {{ settings.product_card_shadow_vertical_offset }}px {{ settings.product_card_shadow_blur }}px {{ settings.product_card_shadow_spread }}px rgb({{ scheme.settings.shadow.red }} {{ scheme.settings.shadow.green }} {{ scheme.settings.shadow.blue }} / {{ settings.product_card_shadow_opacity }}%);
    }

    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }

    @media screen and (min-width: 750px) {
      .section-{{ section.id }}-padding {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
      }
    }

  {% endfor %}


  /* schema settings Badge Corner Radius  */
  .badge_corner_radius{
    border-radius: {{ settings.badge_corner_radius }}px;
  }

  /* Section padding  */
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }
  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<section id="harmony--{{ section.id }}" class="section__collection-all {% if section.settings.enable_gradient %} harmony__color-background-gradient-{{ section.settings.collection_color_scheme }} {% else %} harmony__color-background-{{ section.settings.collection_color_scheme }} {% endif %} section-{{ section.id }}-padding">
  {% paginate collection.products by section.settings.products_to_show %}
    <div class="mx-auto max-w-2xl px-4 lg:max-w-7xl lg:px-6">
      {% if collection.handle == blank %}
        <h2 class="section__heading harmony__color-text-{{ section.settings.collection_color_scheme }} text-[67px] leading-[72px] font-bold tracking-tight">Collection not found</h2>
      {% else %}
      {% comment %} Products filter button and sorting options Bar  {% endcomment %}
      <div class="flter__sort-bar flex items-center justify-between px-4 py-3 sm:px-6">
        <div class="filter_sort-barhidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
          {%- if section.settings.enable_filter or section.settings.enable_filter_drawer -%}
          <div class="filter flex justify-start space-x-2">
            <button class="filter_trigger harmony__color-primary-button-label-{{ section.settings.collection_color_scheme }}">Filter</button>
            <span class="filter__icon">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="harmony__color-icon-{{ section.settings.collection_color_scheme }}">
                <path stroke-linecap="round" stroke-linejoin="round" d="M10.5 6h9.75M10.5 6a1.5 1.5 0 1 1-3 0m3 0a1.5 1.5 0 1 0-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 0 1-3 0m3 0a1.5 1.5 0 0 0-3 0m-9.75 0h9.75" />
              </svg>
            </span>
          </div>
          {%- endif -%}
          {%- if section.settings.enable_sort -%}
          <div class="sort_result">
            {%  render 'product_sort' %}
          </div>
          {%- endif-%}
        </div>
      </div>
      <div class="collection__main flex flex-row">
        {% comment %} Collection products filter sidebar {% endcomment %}
        {%- if section.settings.enable_filter or section.settings.enable_filter_drawer -%}
        <div class="collection__filter filter__sidebar {% if section.settings.enable_filter != false and section.settings.enable_filter_drawer != true %} lg:basis-3/12 {% else %} hidden {% endif %} px-4 lg:px-4">
          <form class="border-t border-gray-200 px-4 py-6">
            {%- for filter in collection.filters -%}
            <div class="border-b border-gray-200 py-6">
              <h3 class="-my-3 flow-root">
                <button type="button" class="flex w-full items-center justify-between harmony__color-primary-button-label-{{ section.settings.collection_color_scheme }} py-3 text-[14px] leading-[19px] font-semibold" aria-controls="filter-section-1" aria-expanded="false">
                  <span>FILTER BY {{ filter.label | upcase }} 
                    <strong>
                      {%- if filter.active_values.size > 0 -%}
                        ({{ filter.active_values.size }})
                      {%- endif -%}
                    </strong>
                  </span>
                  <span class="ml-6 flex items-center">
                    <svg class="h-5 w-5 harmony__color-icon-{{ section.settings.collection_color_scheme }}" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                      <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z" />
                    </svg>
                    <svg class="h-5 w-5 harmony__color-icon-{{ section.settings.collection_color_scheme }}" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                      <path fill-rule="evenodd" d="M4 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H4.75A.75.75 0 014 10z" clip-rule="evenodd" />
                    </svg>
                  </span>
                </button>
              </h3>
              <div class="pt-6" id="filter-section-1">
                <div class="space-y-4 text-[14px] leading-[19px] font-normal">
                  {%- for filter_value in filter.values -%}
                    <div class="flex items-center justify-between harmony__color-text-{{ section.settings.collection_color_scheme }}">
                      <div class="tags__item">
                        <input id="Filter-{{ filter.param_name }}-{{ forloop.index }}" name="{{ filter_value.param_name }}" value="{{ filter_value.value }}" type="checkbox" {% if filter_value.active -%}checked{%- endif %}
                        {% if filter_value.count == 0 and filter_value.active == false -%}disabled-none {%- endif %} class="h-4 w-4 rounded border-gray-300 text-gray-600 focus:ring-gray-500">
                        <label for="Filter-{{ filter.param_name }}-{{ forloop.index }}" class="ml-3 harmony__color-primary-button-label-{{ section.settings.collection_color_scheme }}">
                          <span>
                            {%- case filter_value.display.type -%}
                              {%- when 'colors' -%}
                                {% liquid
                                  assign size_limit = filter_value.display.value.size | at_most: 4
                                  assign rotation = '0deg'
                                  if size_limit == 2
                                    assign rotation = '45deg'
                                  endif
                                  assign angle_increment = 360 | divided_by: size_limit
                                  assign angle = 0
                                %}
                                {%- capture conic_gradient -%}
                                  {%- for color in filter_value.display.value limit: size_limit -%}
                                    {{ color }} {{ angle }}deg{%- assign angle = angle | plus: angle_increment %} {{ angle }}deg{%- unless forloop.last %}, {%- endunless -%}
                                  {%- endfor -%}
                                {%- endcapture -%}
                                <span style="
                                  width: 25px;
                                  height: 25px;
                                  border-radius: 50%;
                                  display: flex;
                                  justify-content: center;
                                  align-items: center;
                                  background: conic-gradient({{ conic_gradient }}); transform: rotateZ({{ rotation }});
                                "></span>
                              {%- when 'image' -%}
                                {{
                                  filter_value.display.value
                                  | image_url: width: 25
                                  | image_tag: alt: filter_value.display.value.alt
                                }}
                              {%- else -%}
                                <span class="visual-display__child"></span>
                            {%- endcase -%}
                          </span>  
                        {{ filter_value.label }}</label>
                      </div>
                        (5)
                    </div>
                  {%- endfor -%}
                  <div class="filter-group-display__submit harmony__color-primary-button-label-{{ section.settings.collection_color_scheme }}">
                    <input type="submit" value="Apply">
                  </div>
                </div>
              </div>
            </div>
            {% endfor %}
          </form>
        </div>
        {%- endif -%}
        {% comment %} Collection products grid  {% endcomment %}
        <div class="collection__products {% if section.settings.enable_filter != false and section.settings.enable_filter_drawer != true %} lg:basis-9/12 {% else %} lg:basis-full {% endif %} px-4 py-4 lg:px-6 lg:py-6">
          <div class="{% if section.settings.products_per_row == '3' %} grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 {% else %} grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 {% endif %} xl:gap-x-8 gap-x-6 gap-y-6">

                {% render 'products-card' %}

          </div>   
          {%  render 'pagination-product', paginate: paginate %} 
        </div>
      </div>
    {% endif %} 
    </div>
  {% endpaginate %}
</section>


{% schema %}
{
  "name": "Collection All page",
  "settings": [
    {
      "type": "color_scheme",
      "id": "collection_color_scheme",
      "label": "Section Color Scheme",
      "default": "scheme-1"
    },
    {
      "type": "checkbox",
      "id": "enable_gradient",
      "label": "Background Gradient?",
      "default": false
    },
    {
      "type": "number",
      "id": "number_of_letters_in_title",
      "label": "Number of letters in Title",
      "default": 12
    },
    {
      "type": "range",
      "id": "products_to_show",
      "label": "Products to show?",
      "min": 3,
      "max": 16,
      "step": 1,
      "default": 3
    },
    {
      "type": "select",
      "id": "products_per_row",
      "label": "Products per Row",
      "options": [
        {
          "value": "3",
          "label": "3"
        },
        {
          "value": "4",
          "label": "4"
        }
      ],
      "default": "3"
    },
    {
      "type": "checkbox",
      "id": "show_price",
      "label": "Show Price",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_category",
      "label": "Show Category",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_reviews",
      "label": "Show Reviews",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_stock_badge",
      "label": "Enable Stock Badge",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_filter",
      "label": "Enable Product Filtering",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_filter_drawer",
      "label": "Enable Product Filter Drawer",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_sort",
      "label": "Enable Product Sorting",
      "default": true
    },
    {
      "type": "header",
      "content": "Product Overlay"
    },
    {
      "type": "checkbox",
      "id": "offer_badge",
      "label": "Sale Badge",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_wishlist",
      "label": "Show Wishlist",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_quick_view",
      "label": "Enable Quick View",
      "default": true
    },
    {
      "type": "header",
      "content": "Mobile Style"
    },
    {
      "type": "select",
      "id": "mobile_layout",
      "label": "Mobile Layout",
      "options": [
        {
          "value": "grid",
          "label": "Grid"
        },
        {
          "value": "carousel",
          "label": "Carousel"
        }
      ],
      "default": "carousel"
    },
    {
      "type": "select",
      "id": "number_of_column",
      "label": "Number of Column",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "1",
      "info": "Number of Products in one column on mobile"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "Collection All page",
      "category": "Harmony Sections"
    }
  ]
}
{% endschema %}
        

{% comment %} Sort and Filtering  {% endcomment %}
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const sortBtn = document.getElementById('SortBtn');
    const sortList = document.getElementById('SortList');

    sortBtn.addEventListener('click', function() {
      if (sortList.classList.contains('hidden')) {
        sortList.classList.remove('-translate-y-2', 'opacity-0', 'hidden');
        sortList.classList.add('translate-y-0', 'opacity-100');
      } else {
        sortList.classList.remove('translate-y-0', 'opacity-100');
        sortList.classList.add('-translate-y-2', 'opacity-0');
        setTimeout(() => sortList.classList.add('hidden'), 700); // Wait for animation to finish
      }
    });

    // Close the dropdown when clicking outside of it
    document.addEventListener('click', function(event) {
      if (!sortBtn.contains(event.target) && !sortList.contains(event.target)) {
        sortList.classList.remove('translate-y-0', 'opacity-100');
        sortList.classList.add('-translate-y-2', 'opacity-0');
        setTimeout(() => sortList.classList.add('hidden'), 700); // Wait for animation to finish
      }
    });
  });
</script>

